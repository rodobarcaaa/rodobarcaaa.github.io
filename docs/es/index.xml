<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog de Rodolfo</title>
    <link>https://rodobarcaaa.github.io/es/</link>
    <description>Recent content on Blog de Rodolfo</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>rodobarcaaa@gmail.com (Rodolfo Echemend√≠a Quintana)</managingEditor>
    <webMaster>rodobarcaaa@gmail.com (Rodolfo Echemend√≠a Quintana)</webMaster>
    <lastBuildDate>Fri, 30 Apr 2021 08:51:49 -0300</lastBuildDate>
    
	<atom:link href="https://rodobarcaaa.github.io/es/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>¬°Class, Case Class y sus secretos!</title>
      <link>https://rodobarcaaa.github.io/es/post/case-class/</link>
      <pubDate>Fri, 30 Apr 2021 08:51:49 -0300</pubDate>
      <author>rodobarcaaa@gmail.com (Rodolfo Echemend√≠a Quintana)</author>
      <guid>https://rodobarcaaa.github.io/es/post/case-class/</guid>
      <description>Como ya sabemos del art√≠culo anterior ¬øPorque Scala, que es y tiene de interesante?, Scala es lenguaje de programaci√≥n que combina la programaci√≥n orientada a objetos y funcional, pues hoy veremos las class y case class, como usarlas, algunos secretos de las case class y porque son las favoritas para el uso en el d√≠a a d√≠a.
¬øQue son las Clases? Al igual que otros lenguajes de programaci√≥n, una clase es una plantilla que define la forma de un objeto; pueden contener valores, variables, tipos y m√©todos que mayormente operan sobre estos.</description>
    </item>
    
    <item>
      <title>¬øPor qu√© Scala?</title>
      <link>https://rodobarcaaa.github.io/es/post/scala-intro/</link>
      <pubDate>Wed, 28 Apr 2021 08:51:49 -0300</pubDate>
      <author>rodobarcaaa@gmail.com (Rodolfo Echemend√≠a Quintana)</author>
      <guid>https://rodobarcaaa.github.io/es/post/scala-intro/</guid>
      <description>¬øQu√© es Scala? Scala es un lenguaje open source creado por Martin Odersky, por concepto es un lenguaje multi-paradigma de prop√≥sito general, que combina programaci√≥n orientada a objetos y funcional en un lenguaje de alto nivel y con tipos seguros. Gracias a sus tipos est√°ticos ayuda evitar errores en aplicaciones muy complejas. Es ejecutado en la JVM, adem√°s se integra con JavaScript, permite construir sistemas de alto rendimiento y con f√°cil acceso a enormes ecosistemas de librer√≠as.</description>
    </item>
    
    <item>
      <title>Sobre mi</title>
      <link>https://rodobarcaaa.github.io/es/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>rodobarcaaa@gmail.com (Rodolfo Echemend√≠a Quintana)</author>
      <guid>https://rodobarcaaa.github.io/es/page/about/</guid>
      <description>def perfil(): Unit = { val educaci√≥n = &amp;#34;&amp;#34;&amp;#34;üë®‚Äçüéì Ingeniero en Ciencias Inform√°ticas (Cuba-UCI / Graduaci√≥n 2011)&amp;#34;&amp;#34;&amp;#34; val preguntameSobre = (&amp;#34;tecnolog√≠a&amp;#34;, &amp;#34;desarrollo web&amp;#34;, &amp;#34;futbol&amp;#34;) val tecnolog√≠as = for { backEnd &amp;lt;- { val scala = List(&amp;#34;Play&amp;#34;, &amp;#34;Slick&amp;#34;, &amp;#34;Tapir&amp;#34;, &amp;#34;Sangria&amp;#34;, &amp;#34;Cats&amp;#34;) val python = &amp;#34;Learning FastApi&amp;#34; scala :+ python } databases &amp;lt;- List(&amp;#34;MySQL&amp;#34;, &amp;#34;PostgreSQL&amp;#34;, &amp;#34;Redis&amp;#34;, &amp;#34;MongoDB&amp;#34;) devOps &amp;lt;- List(&amp;#34;Docker&amp;#34;, &amp;#34;AWS&amp;#34;, &amp;#34;CI/CD&amp;#34;, &amp;#34;Github Actions&amp;#34;) frontEnd &amp;lt;- List(&amp;#34;HTML&amp;#34;, &amp;#34;CSS&amp;#34;, &amp;#34;JS&amp;#34;, &amp;#34;TS&amp;#34;, &amp;#34;Learning ReactJS&amp;#34;) } yield println(List(backEnd, databases, devOps, frontEnd).</description>
    </item>
    
  </channel>
</rss>