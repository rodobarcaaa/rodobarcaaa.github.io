<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Rodolfo&#39;s blog</title>
    <link>https://rodobarcaaa.github.io/en/post/</link>
    <description>Recent content in Posts on Rodolfo&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>rodobarcaaa@gmail.com (Rodolfo Echemendía Quintana)</managingEditor>
    <webMaster>rodobarcaaa@gmail.com (Rodolfo Echemendía Quintana)</webMaster>
    <lastBuildDate>Fri, 30 Apr 2021 08:51:49 -0300</lastBuildDate><atom:link href="https://rodobarcaaa.github.io/en/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Class, Case Class, and their secrets!</title>
      <link>https://rodobarcaaa.github.io/en/post/case-class/</link>
      <pubDate>Fri, 30 Apr 2021 08:51:49 -0300</pubDate>
      <author>rodobarcaaa@gmail.com (Rodolfo Echemendía Quintana)</author>
      <guid>https://rodobarcaaa.github.io/en/post/case-class/</guid>
      <description>As we already know from the previous article Why Scala, what is it and what is interesting about it?, Scala is a programming language that combines object-oriented and functional programming, then today we will see the class and case class, how to use them, some secrets of the case class and why they are the favorites for everyday use.
What are Classes? Like other programming languages, a class is a template that defines an object; can contain values, variables, types, and methods that mostly operate on them.</description>
    </item>
    
    <item>
      <title>Why Scala?</title>
      <link>https://rodobarcaaa.github.io/en/post/scala-intro/</link>
      <pubDate>Wed, 28 Apr 2021 08:51:49 -0300</pubDate>
      <author>rodobarcaaa@gmail.com (Rodolfo Echemendía Quintana)</author>
      <guid>https://rodobarcaaa.github.io/en/post/scala-intro/</guid>
      <description>¿Qué es Scala? Scala es un lenguaje open source creado por Martin Odersky, por concepto es un lenguaje multi-paradigma de propósito general, que combina programación orientada a objetos y funcional en un lenguaje de alto nivel y con tipos seguros. Gracias a sus tipos estáticos ayuda evitar errores en aplicaciones muy complejas. Es ejecutado en la JVM, además se integra con JavaScript, permite construir sistemas de alto rendimiento y con fácil acceso a enormes ecosistemas de librerías.</description>
    </item>
    
  </channel>
</rss>
